{"version":3,"sources":["Enums.ts","Components/Term/Term.module.scss","Components/Inputs/LanguageSelect/LanguageSelect.tsx","Components/Inputs/LanguageSelect/LanguageSelect.module.scss","Hooks/useDidMountEffect.ts","Components/Inputs/LanguageSelect/index.ts","Components/Forms/TextFilterForm/TextFilterForm.module.scss","Components/Pages/TextPage/TextPage.module.scss","Components/Pages/TextPage/TextsTable.module.scss","Components/Forms/TextFilterForm/TextFilterForm.tsx","Components/Forms/TextFilterForm/index.ts","Components/Forms/TextCreateForm/TextCreateForm.tsx","Components/Modals/TextCreateModal/TextCreateModal.tsx","Components/Modals/TextCreateModal/index.ts","Components/Forms/TextEditForm/index.tsx","Selectors/TextSelector.ts","Components/Modals/TextEditModal/index.tsx","Components/Pages/TextPage/DeleteTextButton.tsx","Components/Pages/TextPage/TextActions.tsx","Components/Pages/TextPage/TextProgress.tsx","Components/Pages/TextPage/TermNumber.tsx","Components/Pages/TextPage/TextStatus.tsx","Components/Pages/TextPage/TotalTerm.tsx","Components/Pages/TextPage/TextsTable.tsx","Components/Pages/TextPage/TextPage.tsx","Utilities/queryString.ts","Components/Pages/TextPage/index.ts"],"names":["TermLearningLevel","Skipped","Ignored","UnKnow","Learning1","Learning2","Learning3","Learning4","Learning5","WellKnow","LearningTermLevels","LanguageCode","English","TermLearningColor","styles","termSkipped","termIgnored","termUnknown","termLearning1","termLearning2","termLearning3","termLearning4","termLearning5","termWellKnown","TermLearningLevelShortcut","getNextLearningLevel","learningLevel","getPreviousLearningLevel","isLearningTerm","includes","importantColors","module","exports","connect","state","languages","language","value","onChange","disabled","className","name","cn","classNames","select","variant","id","labelId","label","color","map","code","useDidMountEffect","func","deps","didMount","useRef","useEffect","current","LanguageSelect","textFilterTimeout","TextFilterForm","onFilterChange","values","initialValues","title","languageCode","onSubmit","handleChange","InnerForm","clearTimeout","setTimeout","TextField","margin","titleInput","placeholder","defaultProps","currentLanguage","formRef","submitting","onCancel","content","innerRef","component","style","width","multiline","rows","maxRows","display","justifyContent","Button","onClick","type","TextCreateModal","createText","createTextAction","hide","onCreate","visible","React","setSubmitting","useState","Modal","open","height","alignItems","Paper","padding","Typography","textAlign","e","preventDefault","form","Error","validateForm","then","errors","Object","keys","length","resetForm","props","editDetail","marginTop","minRows","selectEditDetail","text","editText","editTextAction","getEditDetail","getTextEditDetailAction","editingText","onEdit","ownProps","texts","find","t","textId","deleteText","deleteTextAction","dialogOpen","setDialogOpen","deleting","setDeleting","handleClose","IconButton","size","Dialog","onClose","DialogTitle","DialogContent","DialogContentText","DialogActions","autoFocus","TextActions","TextProgress","history","useHistory","percentage","termCount","bookmark","Math","floor","flexDirection","push","TermNumber","counts","minWidth","sum","termNumber","round","getTermCount","getTermCountAction","getProcessedTermCount","getProcessedTermCountAction","getTermCountInterval","setGetTermCountInterval","getProcessedTermCountInterval","setGetProcessedTermCountInterval","interval","window","setInterval","clearInterval","processedTermCount","backgroundColor","loadTermCounts","loadTermCountAction","record","undefined","key","dayjs","extend","relativeTime","utc","getTextLanguage","lang","l","Loading","CircularProgress","filters","page","itemPerPage","total","getTexts","getTextsAction","getLanguages","getLanguageAction","isLoading","TableContainer","Table","TableHead","TableRow","TableCell","TableBody","maxHeight","overflow","scrollbarWidth","align","createdAt","fromNow","TextPage","location","createModalVisible","setCreateModalVisible","editModalVisible","setEditModalVisible","setIsLoading","setEditingText","query","queryString","queries","substr","split","result","forEach","q","parseQueryString","search","loadingAndGetTexts","parseInt","useCallback","myGetTexts","queryPage","Number","isNaN","filterTexts","Pagination","count","ceil","_","toString"],"mappings":"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","file":"static/js/8.e41331af.chunk.js","sourcesContent":["import styles from \"./Components/Term/Term.module.scss\";\n\nexport const TermLearningLevel: { [key: string]: string } = {\n  Skipped: \"skipped\",\n\n  Ignored: \"ignored\",\n\n  UnKnow: \"unknown\",\n\n  Learning1: \"learning-1\",\n\n  Learning2: \"learning-2\",\n\n  Learning3: \"learning-3\",\n\n  Learning4: \"learning-4\",\n\n  Learning5: \"learning-5\",\n\n  WellKnow: \"well-known\",\n};\n\nexport const LearningTermLevels = [\n  TermLearningLevel.UnKnow,\n  TermLearningLevel.Learning1,\n  TermLearningLevel.Learning2,\n  TermLearningLevel.Learning3,\n  TermLearningLevel.Learning4,\n  TermLearningLevel.Learning5,\n];\n\nexport const LanguageCode = {\n  English: \"en\",\n};\n\nexport const TermLearningColor = {\n  [TermLearningLevel.Skipped]: styles.termSkipped,\n\n  [TermLearningLevel.Ignored]: styles.termIgnored,\n\n  [TermLearningLevel.UnKnow]: styles.termUnknown,\n\n  [TermLearningLevel.Learning1]: styles.termLearning1,\n\n  [TermLearningLevel.Learning2]: styles.termLearning2,\n\n  [TermLearningLevel.Learning3]: styles.termLearning3,\n\n  [TermLearningLevel.Learning4]: styles.termLearning4,\n\n  [TermLearningLevel.Learning5]: styles.termLearning5,\n\n  [TermLearningLevel.WellKnow]: styles.termWellKnown,\n};\n\nexport const TermLearningLevelShortcut = {\n  [TermLearningLevel.Skipped]: \"S\",\n\n  [TermLearningLevel.Ignored]: \"I\",\n\n  [TermLearningLevel.UnKnow]: \"UK\",\n\n  [TermLearningLevel.Learning1]: \"I\",\n\n  [TermLearningLevel.Learning2]: \"II\",\n\n  [TermLearningLevel.Learning3]: \"II\",\n\n  [TermLearningLevel.Learning4]: \"IV\",\n\n  [TermLearningLevel.Learning5]: \"V\",\n\n  [TermLearningLevel.WellKnow]: \"WK\",\n};\n\nexport const getNextLearningLevel = (learningLevel: string) => {\n  switch (learningLevel) {\n    case TermLearningLevel.UnKnow:\n      return TermLearningLevel.Learning1;\n    case TermLearningLevel.Learning1:\n      return TermLearningLevel.Learning2;\n    case TermLearningLevel.Learning2:\n      return TermLearningLevel.Learning3;\n    case TermLearningLevel.Learning3:\n      return TermLearningLevel.Learning4;\n    case TermLearningLevel.Learning4:\n      return TermLearningLevel.Learning5;\n    case TermLearningLevel.Learning5:\n      return TermLearningLevel.WellKnow;\n    default:\n      return learningLevel;\n  }\n};\n\nexport const getPreviousLearningLevel = (learningLevel: string) => {\n  switch (learningLevel) {\n    case TermLearningLevel.UnKnow:\n      return TermLearningLevel.Ignored;\n    case TermLearningLevel.Learning1:\n      return TermLearningLevel.UnKnow;\n    case TermLearningLevel.Learning2:\n      return TermLearningLevel.Learning1;\n    case TermLearningLevel.Learning3:\n      return TermLearningLevel.Learning2;\n    case TermLearningLevel.Learning4:\n      return TermLearningLevel.Learning3;\n    case TermLearningLevel.Learning5:\n      return TermLearningLevel.Learning4;\n    case TermLearningLevel.WellKnow:\n      return TermLearningLevel.Learning5;\n    default:\n      return learningLevel;\n  }\n};\n\nexport const isLearningTerm = (learningLevel: string) =>\n  LearningTermLevels.includes(learningLevel);\n\nexport const importantColors = [\n  \"#E50027\",\n  \"#E5000F\",\n  \"#E50800\",\n  \"#E52000\",\n  \"#E53800\",\n  \"#E55000\",\n  \"#E56800\",\n  \"#E68000\",\n  \"#E69701\",\n  \"#E6AF01\",\n  \"#E6C701\",\n  \"#E6DF01\",\n  \"#D6E601\",\n  \"#BEE701\",\n  \"#A7E701\",\n  \"#8FE702\",\n  \"#77E702\",\n  \"#60E702\",\n  \"#48E702\",\n  \"#31E802\",\n  \"#19E802\",\n  \"#02E803\",\n  \"#03E81B\",\n  \"#03E833\",\n  \"#03E84B\",\n  \"#03E963\",\n  \"#03E97B\",\n  \"#03E993\",\n  \"#03E9AB\",\n  \"#04E9C3\",\n  \"#04E9DB\",\n  \"#04E0EA\",\n  \"#04C9EA\",\n  \"#04B1EA\",\n  \"#0499EA\",\n  \"#0482EA\",\n  \"#056AEA\",\n  \"#0553EB\",\n  \"#053BEB\",\n  \"#0523EB\",\n  \"#050CEB\",\n  \"#1705EB\",\n  \"#2F05EB\",\n  \"#4706EC\",\n  \"#5F06EC\",\n  \"#7706EC\",\n  \"#8F06EC\",\n  \"#A706EC\",\n  \"#BF06EC\",\n  \"#D707ED\",\n];\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"term\":\"Term_term__2-NZg\",\"termCount\":\"Term_termCount__DM8Pp\",\"termIgnored\":\"Term_termIgnored__1hr4Y\",\"termSkipped\":\"Term_termSkipped__KPHim\",\"termUnknown\":\"Term_termUnknown__1mQqj\",\"termLearning1\":\"Term_termLearning1__y3Qmv\",\"termLearning2\":\"Term_termLearning2__1Z9Ke\",\"termLearning3\":\"Term_termLearning3__2rFg-\",\"termLearning4\":\"Term_termLearning4__2oG1C\",\"termLearning5\":\"Term_termLearning5__1dCC7\",\"termWellKnown\":\"Term_termWellKnown__2X013\",\"termLearned\":\"Term_termLearned__1HaXE\",\"termLearning\":\"Term_termLearning__3OKz8\",\"bookmark\":\"Term_bookmark__2vKqX\"};","import {Select, MenuItem, FormControl, InputLabel} from \"@mui/material\";\nimport React from \"react\";\nimport classNames from \"classnames\";\nimport {connect} from \"react-redux\";\nimport styles from \"./LanguageSelect.module.scss\";\nimport {Language, RootState} from \"../../../RootReducer\";\n\ninterface StateProps {\n  languages: Language[];\n}\n\ninterface LanguageSelectProps {\n  value: string | null;\n  className?: string | undefined;\n  onChange?: any;\n  disabled?: boolean;\n  name: string;\n}\n\ntype Props = StateProps & LanguageSelectProps;\n\nconst LanguageSelect: React.FC<Props> =\n  ({\n     languages,\n     value = \"\",\n     onChange,\n     disabled = false,\n     className = undefined,\n     name,\n   }) => {\n\n    const cn = classNames(className, styles.select);\n    return (\n      <FormControl variant=\"outlined\" className={cn}>\n        <InputLabel id=\"language-select-label\">Language</InputLabel>\n        <Select\n          labelId=\"language-select-label\"\n          onChange={onChange}\n          label=\"Language\"\n          value={value}\n          color=\"primary\"\n          name={name}\n          disabled={disabled || false}\n        >\n          {languages.map((language) => (\n            <MenuItem key={language.code} value={language.code}>\n              {language.name}\n            </MenuItem>\n          ))}\n        </Select>\n      </FormControl>\n    );\n  }\n\nexport default connect<StateProps, void, LanguageSelectProps, RootState>(\n  (state: RootState) => ({\n    languages: state.language.languages,\n  }))(LanguageSelect);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"select\":\"LanguageSelect_select__2dF_z\"};","import { useEffect, useRef } from 'react';\n\nconst useDidMountEffect = (func: Function, deps: any[]) => {\n  const didMount = useRef(false);\n\n  useEffect(() => {\n    if (didMount.current) func();\n    else didMount.current = true;\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, deps);\n}\n\nexport default useDidMountEffect;\n","/**\n * language select\n */\nimport LanguageSelect from \"./LanguageSelect\";\n\nexport default LanguageSelect;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"titleInput\":\"TextFilterForm_titleInput__2_dHl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"learning\":\"TextPage_learning__3nZkA\",\"table\":\"TextPage_table__1dga4\",\"row\":\"TextPage_row__1svE0\",\"editButton\":\"TextPage_editButton__87bGs\",\"deleteButton\":\"TextPage_deleteButton__1dqA7\",\"actionButton\":\"TextPage_actionButton__dKcMY\",\"termNumber\":\"TextPage_termNumber__14Hs8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"TextsTable_title__2FdZf\"};","import {TextField} from \"@mui/material\";\nimport React from \"react\";\nimport LanguageSelect from \"../../Inputs/LanguageSelect\";\nimport styles from \"./TextFilterForm.module.scss\";\nimport {Form, Formik} from \"formik\";\nimport {TextFilter} from \"../../../Actions/TextAction\";\nimport useDidMountEffect from \"../../../Hooks/useDidMountEffect\";\n\ninterface Props {\n  onFilterChange: any\n  values: TextFilter\n}\n\nlet textFilterTimeout: any = null;\n\n/**\n * text filter form\n */\nconst TextFilterForm: React.FC<Props> = ({onFilterChange, values}) => {\n  return (\n    <Formik\n    initialValues={{\n      title: values.title,\n      languageCode: values.languageCode,\n    }}\n    onSubmit={() => {\n    }}>\n      {({values, handleChange}) => {\n        return <InnerForm values={values} handleChange={handleChange} onFilterChange={onFilterChange}/>\n      }}\n    </Formik>\n  );\n};\n\ninterface InnerProps {\n  values: TextFilter;\n  handleChange: any;\n  onFilterChange: Function;\n}\n\n\nconst InnerForm: React.FC<InnerProps> = ({values, onFilterChange, handleChange}) => {\n  useDidMountEffect(() => {\n    clearTimeout(textFilterTimeout);\n    textFilterTimeout = setTimeout(() => {\n      onFilterChange({languageCode: values.languageCode, title: values.title});\n    }, 500);\n  }, [values.languageCode, values.title, onFilterChange])\n  return (\n        <Form>\n          <LanguageSelect\n            name=\"languageCode\"\n            value={values.languageCode}\n            onChange={handleChange}\n          />\n          <TextField\n            name=\"title\"\n            variant=\"outlined\"\n            margin=\"dense\"\n            label=\"Title\"\n            className={styles.titleInput}\n            value={values.title}\n            placeholder=\"Title\"\n            onChange={handleChange}\n          />\n          <hr/>\n        </Form>\n  );\n}\n\nTextFilterForm.defaultProps = {};\n\nexport default TextFilterForm;\n","/**\n * text filter form\n */\nimport TextFilterForm from \"./TextFilterForm\";\n\nexport default TextFilterForm;\n","import {Button, TextField} from \"@mui/material\";\nimport React from \"react\";\nimport {connect} from \"react-redux\";\nimport LanguageSelect from \"../../Inputs/LanguageSelect/LanguageSelect\";\nimport {RootState} from \"../../../RootReducer\";\nimport {Formik, Form, ErrorMessage, FormikProps} from 'formik';\n\ninterface StateProps {\n  currentLanguage: string;\n}\n\ninterface OwnProps {\n  formRef: React.Ref<FormikProps<FormValues>> | undefined;\n  onSubmit: (e: any) => void;\n  onCancel: () => void;\n  submitting: boolean;\n}\n\nexport interface FormValues {\n  languageCode: string;\n  title: string;\n  content: string;\n}\n\ntype Props = OwnProps & StateProps;\n\nconst TextCreateForm: React.FC<Props> =\n  ({\n     currentLanguage,\n     formRef,\n     onSubmit,\n     submitting,\n     onCancel,\n   }) => {\n    return (\n      <Formik\n        initialValues={{\n          languageCode: currentLanguage,\n          title: \"\",\n          content: \"\"\n        }}\n        onSubmit={onSubmit}\n        innerRef={formRef}\n      >\n        {({handleChange, values}) => (\n          <Form onSubmit={onSubmit}>\n            <LanguageSelect name=\"languageCode\" onChange={handleChange} value={values.languageCode}/>\n            <ErrorMessage name=\"languageCode\" component=\"div\"/>\n            <TextField\n              variant=\"outlined\"\n              name=\"title\"\n              value={values.title}\n              onChange={handleChange}\n              label=\"Title\"\n              placeholder=\"Title\"\n              style={{width: \"100%\"}}\n            />\n            <TextField\n              onChange={handleChange}\n              variant=\"outlined\"\n              label=\"Content\"\n              name=\"content\"\n              value={values.content}\n              multiline\n              rows={10}\n              maxRows={20}\n              style={{width: \"100%\"}}\n              placeholder=\"Please input text content here ...\"\n            />\n            <div\n              style={{\n                display: \"flex\",\n                margin: \"1rem 0 0 0\",\n                justifyContent: \"space-between\",\n              }}\n            >\n              <Button\n                disabled={submitting}\n                onClick={onCancel}\n                color=\"secondary\"\n                variant=\"contained\"\n              >\n                Cancel\n              </Button>\n              <Button\n                disabled={submitting}\n                type=\"submit\"\n                color=\"primary\"\n                variant=\"contained\"\n              >\n                Add\n              </Button>\n            </div>\n          </Form>\n        )}\n      </Formik>\n    );\n  };\n\nexport default connect<StateProps, void, OwnProps, RootState>((state) => ({\n  currentLanguage: state.language.currentLanguage,\n}))(TextCreateForm);\n","import Modal from \"@mui/material/Modal\";\nimport React from \"react\";\nimport {connect} from \"react-redux\";\nimport {Paper, Typography} from \"@mui/material\";\nimport {createTextAction} from \"../../../Actions/TextAction\";\nimport TextCreateForm, {FormValues} from \"../../Forms/TextCreateForm/TextCreateForm\";\nimport {FormikProps} from \"formik\";\n\ninterface StateProps {\n  createText: (values: any) => any;\n}\n\ninterface OwnProps {\n  hide: () => void;\n  onCreate: () => void;\n  visible: boolean;\n}\n\ntype Props = StateProps & OwnProps;\n\n/**\n * text create modal\n */\nconst TextCreateModal: React.FC<Props> =\n  ({\n     createText,\n     hide,\n     onCreate,\n     visible,\n   }) => {\n    const formRef = React.useRef<FormikProps<FormValues>>(null);\n    const [submitting, setSubmitting] = React.useState<boolean>(false);\n\n    const handleOk = (e: any) => {\n      e.preventDefault();\n      const form = formRef.current;\n      if (!form) throw new Error();\n      form.validateForm(form.values).then(errors => {\n        if (Object.keys(errors).length === 0) {\n          setSubmitting(true);\n          createText(form.values).then(() => {\n            onCreate();\n            setSubmitting(false);\n            form.resetForm()\n            hide();\n          });\n        }\n      })\n    }\n\n    const handleCancel = () => {\n      const form = formRef.current;\n      if (!form) throw new Error();\n      form.resetForm();\n      hide();\n    };\n\n    return (\n      <Modal open={visible}>\n        <div\n          style={{\n            display: \"flex\",\n            height: \"100%\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n          }}\n        >\n          <Paper style={{padding: \"1rem\", width: \"90vw\"}}>\n            <Typography style={{textAlign: \"center\"}}>Add new text</Typography>\n            <TextCreateForm\n              onSubmit={handleOk}\n              submitting={submitting}\n              onCancel={handleCancel}\n              formRef={formRef}\n            />\n          </Paper>\n        </div>\n      </Modal>\n    );\n  };\n\nexport default connect(null, {\n  createText: createTextAction,\n})(TextCreateModal);\n","/**\n * export\n */\nimport TextCreateModal from \"./TextCreateModal\";\n\nexport default TextCreateModal;\n","import {Form, Formik, FormikProps} from \"formik\";\nimport {Button, TextField} from \"@mui/material\";\nimport React from \"react\";\nimport {connect} from \"react-redux\";\nimport LanguageSelect from \"../../Inputs/LanguageSelect/LanguageSelect\";\nimport {RootState} from \"../../../RootReducer\";\n\ninterface Props {\n  editDetail: any;\n  formRef?: React.Ref<FormikProps<FormValues>> | undefined;\n  onSubmit: any;\n  onCancel: any;\n  submitting: boolean;\n}\n\nexport interface FormValues {\n  title: string;\n  languageCode: string;\n  content: string;\n}\n\n\n/**\n * text create form\n */\nconst TextEditForm: React.FC<Props> = (props) => {\n  const {editDetail, formRef, onSubmit, onCancel, submitting} = props;\n\n  return (\n    <Formik\n      onSubmit={onSubmit}\n      innerRef={formRef}\n      initialValues={{\n        title: editDetail.title,\n        languageCode: editDetail.languageCode,\n        content: editDetail.content\n      }}>\n      {({values, handleChange}) => {\n        return (\n          <Form>\n            <LanguageSelect value={values.languageCode} name=\"languageCode\" onChange={handleChange}/>\n            <TextField\n              name=\"title\"\n              variant=\"outlined\"\n              onChange={handleChange}\n              value={values.title}\n              label=\"Title\"\n              style={{width: \"100%\", marginTop: \"1rem\"}}\n              placeholder=\"Title\"\n            />\n            <TextField\n              style={{width: \"100%\", marginTop: \"1rem\"}}\n              name=\"content\"\n              value={values.content}\n              onChange={handleChange}\n              variant=\"outlined\"\n              label=\"Content\"\n              multiline\n              maxRows={20}\n              minRows={10}\n              placeholder=\"Please input text content here ...\"\n            />\n            <hr/>\n            <div style={{display: \"flex\", justifyContent: \"space-between\"}}>\n              <Button\n                disabled={submitting}\n                variant=\"contained\"\n                color=\"secondary\"\n                onClick={onCancel}\n              >\n                Cancel\n              </Button>\n              <Button\n                disabled={submitting}\n                variant=\"contained\"\n                color=\"primary\"\n                type=\"submit\"\n              >\n                Save\n              </Button>\n            </div>\n          </Form>\n        );\n      }}\n    </Formik>\n  );\n};\n\nexport default connect(\n  (state: RootState) => ({\n    currentLanguage: state.language.currentLanguage,\n  }),\n  null\n)(TextEditForm);\n","import { RootState } from \"../RootReducer\";\n\nexport const selectBookmark = (state: RootState) =>\n  state.text.readingText?.bookmark;\nexport const selectTotalTerm = (state: RootState) =>\n  state.text.readingText?.termCount;\nexport const selectEditDetail = (state: RootState) => state.text.editDetail;\n","import {Modal, Paper} from \"@mui/material\";\nimport React from \"react\";\nimport {connect} from \"react-redux\";\nimport TextEditForm, {FormValues} from \"../../Forms/TextEditForm\";\nimport {\n  editTextAction,\n  getTextEditDetailAction,\n} from \"../../../Actions/TextAction\";\nimport {selectEditDetail} from \"../../../Selectors/TextSelector\";\nimport {TextEditDetail} from \"../../../Reducers/TextReducer\";\nimport {RootState} from \"../../../RootReducer\";\nimport {FormikProps} from \"formik\";\n\ninterface OwnProps {\n  hide: () => void;\n  editingText: number | null;\n  onEdit: () => void;\n  visible: boolean;\n}\n\ninterface DispatchProps {\n  getEditDetail: (id: number) => void;\n  editText: (id: number, values: any) => Promise<any>;\n}\n\ninterface StateProps {\n  editDetail?: TextEditDetail;\n}\n\ntype Props = OwnProps & StateProps & DispatchProps;\n\nconst TextEditModal: React.FC<Props> =\n  ({\n     visible,\n     editDetail,\n     hide,\n     editingText,\n     getEditDetail,\n     editText,\n     onEdit\n   }) => {\n    const [submitting, setSubmitting] = React.useState(false)\n    React.useEffect(() => {\n      if (editingText) {\n        getEditDetail(editingText);\n      }\n    }, [editingText]) // eslint-disable-line react-hooks/exhaustive-deps\n    React.useEffect(() => {\n      if (!editDetail) {\n        hide();\n      }\n    }, [editDetail]) // eslint-disable-line react-hooks/exhaustive-deps\n    const formRef = React.useRef<FormikProps<FormValues>>(null)\n\n    if (!editDetail) {\n      return null;\n    }\n\n    const handleOk = () => {\n      const form = formRef.current;\n      setSubmitting(true)\n      form?.validateForm(form?.values).then((errors) => {\n        if (Object.keys(errors).length === 0) {\n          editText(editingText!, form?.values).then(() => {\n            onEdit();\n            setSubmitting(false)\n            form?.resetForm();\n            hide();\n          });\n        }\n      });\n    };\n\n    const handleCancel = () => {\n      const form = formRef.current;\n      form?.resetForm();\n      hide();\n    };\n\n    return (\n      <Modal open={visible} title=\"Edit text\">\n        <div\n          style={{\n            height: \"100%\",\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n          }}\n        >\n          <Paper style={{width: \"90vw\", padding: \"1rem\"}}>\n            <TextEditForm\n              onSubmit={handleOk}\n              onCancel={handleCancel}\n              editDetail={editDetail}\n              formRef={formRef}\n              submitting={submitting}\n            />\n          </Paper>\n        </div>\n      </Modal>\n    );\n  }\n\n// @ts-ignore\nexport default connect<StateProps, DispatchProps, OwnProps, RootState>(\n  (state: RootState) => ({\n    editDetail: selectEditDetail(state),\n  }),\n  {\n    editText: editTextAction,\n    getEditDetail: getTextEditDetailAction,\n  }\n)(TextEditModal);\n","import {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  IconButton,\n} from \"@mui/material\";\nimport DeleteForeverIcon from \"@mui/icons-material/DeleteForever\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { RootState } from \"../../../RootReducer\";\nimport { TextItem } from \"../../../Reducers/TextReducer\";\nimport { deleteTextAction } from \"../../../Actions/TextAction\";\n\ninterface DispatchProps {\n  deleteText: (id: number) => any;\n}\n\ninterface OwnProps {\n  textId: number;\n}\n\ninterface StateProps {\n  text: TextItem;\n}\n\ntype Props = StateProps & DispatchProps & OwnProps;\n\nconst DeleteTextButton: React.FC<Props> = ({ text, deleteText }) => {\n  const [dialogOpen, setDialogOpen] = React.useState<boolean>(false);\n  const [deleting, setDeleting] = React.useState<boolean>(false);\n\n  const handleClickOpen = () => {\n    setDialogOpen(true);\n  };\n\n  const handleClose = () => {\n    setDialogOpen(false);\n  };\n\n  const handleConfirm = () => {\n    setDeleting(true);\n    deleteText(text.id).then(() => {\n      setDeleting(false);\n      handleClose();\n    });\n  };\n\n  return (\n    <div>\n      <IconButton color=\"secondary\" onClick={handleClickOpen} size=\"large\">\n        <DeleteForeverIcon />\n      </IconButton>\n      <Dialog open={dialogOpen} onClose={handleClose}>\n        <DialogTitle>Are you sure to delete this text forever ?</DialogTitle>\n        <DialogContent>\n          <DialogContentText>{text.title}</DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button\n            variant=\"contained\"\n            autoFocus\n            disabled={deleting}\n            onClick={handleClose}\n            color=\"primary\"\n          >\n            Cancel\n          </Button>\n          <Button\n            variant=\"contained\"\n            disabled={deleting}\n            onClick={handleConfirm}\n            color=\"secondary\"\n            autoFocus\n          >\n            Delete\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n};\n\nexport default connect<StateProps, DispatchProps, OwnProps, RootState>(\n  (state, ownProps) => {\n    const text = state.text.texts.find((t) => t.id === ownProps.textId);\n    if (!text) throw new Error();\n    return {\n      text,\n    };\n  },\n  { deleteText: deleteTextAction }\n)(DeleteTextButton);\n","import React from \"react\";\nimport { IconButton } from \"@mui/material\";\nimport EditIcon from \"@mui/icons-material/Edit\";\nimport { TextItem } from \"../../../Reducers/TextReducer\";\nimport DeleteTextButton from \"./DeleteTextButton\";\n\nexport interface TextActionsProps {\n  text: TextItem;\n  onEdit: Function;\n}\n\nconst TextActions: React.FC<TextActionsProps> = ({ onEdit, text: { id } }) => {\n  return (\n    <span>\n      <DeleteTextButton textId={id} />\n      <IconButton color=\"primary\" onClick={() => onEdit(id)} size=\"large\">\n        <EditIcon />\n      </IconButton>\n    </span>\n  );\n};\n\nexport default TextActions;\n","import React from \"react\";\nimport { Button } from \"@mui/material\";\nimport { useHistory } from \"react-router\";\nimport { TextItem } from \"../../../Reducers/TextReducer\";\n\nfunction TextProgress(props: { text: TextItem }) {\n  const { text } = props;\n  const history = useHistory();\n  let percentage = 0;\n  if (text.termCount === 0) {\n    return <span>-</span>;\n  }\n  if (text.bookmark && text.bookmark !== 0) {\n    percentage = Math.floor((text.bookmark / text.termCount) * 10000) / 100;\n  }\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        alignItems: \"center\",\n        flexDirection: \"column\",\n        justifyContent: \"center\",\n      }}\n    >\n      <div>{`${percentage}%`}</div>\n      <Button\n        variant=\"contained\"\n        color=\"primary\"\n        onClick={() => history.push(`/text/read/${text.id}`)}\n      >\n        Read\n      </Button>\n    </div>\n  );\n}\n\nexport default TextProgress;\n","import React from \"react\";\nimport classNames from \"classnames\";\nimport { TermLearningColor, TermLearningLevel } from \"../../../Enums\";\nimport styles from \"./TextPage.module.scss\";\nimport { TextItem } from \"../../../Reducers/TextReducer\";\n\nconst TermNumber = (props: { text: TextItem; learningLevel: string }) => {\n  const { text, learningLevel } = props;\n  const { counts } = text;\n  if (!counts) {\n    return <div style={{ minWidth: \"2rem\" }}>-</div>;\n  }\n  const current = counts[learningLevel];\n  if (!current) {\n    return <div style={{ minWidth: \"2rem\" }}>0</div>;\n  }\n\n  const sum =\n    text.termCount -\n    counts[TermLearningLevel.Ignored] -\n    counts[TermLearningLevel.Skipped];\n\n  const className = classNames(\n    styles.termNumber,\n    TermLearningColor[learningLevel]\n  );\n\n  return (\n    <div className={className}>\n      {`${current}`}\n      <br />\n      ~\n      <br />\n      {`${Math.round((current / sum) * 100)}%`}\n    </div>\n  );\n};\n\nexport default TermNumber;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  getTermCountAction,\n  getProcessedTermCountAction,\n} from \"../../../Actions/TextAction\";\nimport {TextItem} from \"../../../Reducers/TextReducer\";\n\ninterface Props {\n  text: TextItem,\n  getTermCount: Function\n  getProcessedTermCount: Function\n}\n\nconst TextStatus: React.FC<Props> = ({ text, getTermCount, getProcessedTermCount }) => {\n  const [getTermCountInterval, setGetTermCountInterval] = React.useState<number | undefined>();\n  const [\n    getProcessedTermCountInterval,\n    setGetProcessedTermCountInterval,\n  ] = React.useState<number|undefined>();\n  React.useEffect(() => {\n    if (text.termCount === 0) {\n      if (!getTermCountInterval) {\n        const interval: number = window.setInterval(() => {\n          getTermCount(text.id);\n        }, 2000);\n        setGetTermCountInterval(interval);\n      }\n    } else {\n      clearInterval(getTermCountInterval);\n    }\n  }, [getTermCount, getTermCountInterval, text.id, text.termCount]);\n\n  React.useEffect(\n    () => () => {\n      clearInterval(getTermCountInterval);\n      clearInterval(getProcessedTermCountInterval);\n    },\n    [getProcessedTermCountInterval, getTermCountInterval]\n  );\n\n  React.useEffect(() => {\n    if (text.processedTermCount < text.termCount) {\n      if (!getProcessedTermCountInterval) {\n        const interval = window.setInterval(() => {\n          getProcessedTermCount(text.id);\n        }, 2000);\n        setGetProcessedTermCountInterval(interval);\n      }\n    } else {\n      clearInterval(getProcessedTermCountInterval);\n    }\n  }, [\n    getProcessedTermCount,\n    getProcessedTermCountInterval,\n    getTermCountInterval,\n    text.id,\n    text.processedTermCount,\n    text.termCount,\n  ]);\n\n  if (text.termCount === 0) {\n    return <span style={{ backgroundColor: \"#FF0101\" }}>Processing</span>;\n  }\n  if (text.termCount === text.processedTermCount) {\n    return <span style={{ backgroundColor: \"#009700\" }}>Done</span>;\n  }\n  return (\n    <span style={{ backgroundColor: \"#5AB7D4\" }}>\n      {`${text.processedTermCount}/${text.termCount}(${Math.floor(\n        (text.processedTermCount * 100) / text.termCount\n      )}%)`}\n    </span>\n  );\n};\n\nexport default connect(null, {\n  getTermCount: getTermCountAction,\n  getProcessedTermCount: getProcessedTermCountAction,\n})(TextStatus);\n","import React from \"react\";\nimport {connect} from \"react-redux\";\nimport {loadTermCountAction} from \"../../../Actions/TextAction\";\nimport {TermLearningLevel} from \"../../../Enums\";\nimport {TextItem} from \"../../../Reducers/TextReducer\";\n\ninterface Props {\n  value: { [key: string]: number } | null;\n  record: TextItem;\n  loadTermCounts: (id: number) => void;\n}\n\nconst TotalTerm: React.FC<Props> = ({value, record, loadTermCounts}) => {\n  React.useEffect(() => {\n    if (value === null) {\n      loadTermCounts(record.id);\n    }\n  }, [loadTermCounts, record.id, value])\n\n  React.useEffect(() => {\n    if (\n      value === undefined ||\n      record.termCount === 0 ||\n      (record.processedTermCount < record.termCount)\n    ) {\n      loadTermCounts(record.id);\n    }\n  }, [record?.processedTermCount, record.id, record.termCount, value, loadTermCounts])\n\n  if (!value) {\n    return <span>-</span>;\n  }\n  let sum = 0;\n  Object.keys(value).map((key) => {\n    if (key !== TermLearningLevel.Skipped) sum += value[key];\n    return null;\n  });\n  return <span>{sum}</span>;\n}\n\nexport default connect(null, {loadTermCounts: loadTermCountAction})(\n  TotalTerm\n);\n","import React from \"react\";\nimport Table from \"@mui/material/Table\";\nimport { connect } from \"react-redux\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TableRow from \"@mui/material/TableRow\";\nimport Paper from \"@mui/material/Paper\";\nimport { CircularProgress } from \"@mui/material\";\nimport dayjs from \"dayjs\";\nimport relativeTime from \"dayjs/plugin/relativeTime\";\nimport utc from \"dayjs/plugin/utc\";\nimport {\n  deleteTextAction,\n  getTextsAction,\n  loadTermCountAction,\n} from \"../../../Actions/TextAction\";\nimport { getLanguageAction } from \"../../../Actions/LanguageAction\";\nimport TextActions from \"./TextActions\";\nimport TextProgress from \"./TextProgress\";\nimport { Language, RootState } from \"../../../RootReducer\";\nimport { TextItem } from \"../../../Reducers/TextReducer\";\nimport TermNumber from \"./TermNumber\";\nimport { TermLearningLevel } from \"../../../Enums\";\nimport TextStatus from \"./TextStatus\";\nimport TotalTerm from \"./TotalTerm\";\nimport styles from './TextsTable.module.scss'\n\ndayjs.extend(relativeTime);\ndayjs.extend(utc);\n\ninterface TextsTableProps {\n  texts: TextItem[];\n  onEdit: Function;\n  isLoading: boolean;\n  languages: Language[];\n}\n\nconst getTextLanguage = (language: string, languages: Language[]) => {\n  const lang = languages.find((l) => l.code === language);\n  if (lang) {\n    return lang.name;\n  }\n  return \"Unknown language\";\n};\n\nconst Loading = () => {\n  return (\n    <div\n      style={{\n        width: \"100%\",\n        padding: \"10px 0\",\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n      }}\n    >\n      <CircularProgress />\n    </div>\n  );\n};\n\nconst TextsTable: React.FC<TextsTableProps> = ({\n  isLoading,\n  languages,\n  onEdit,\n  texts,\n}) => {\n  return (\n    <TableContainer component={Paper}>\n      {isLoading ? (\n        <Loading />\n      ) : (\n        <Table>\n          <TableHead>\n            <TableRow>\n              <TableCell>Title</TableCell>\n              <TableCell>C</TableCell>\n              <TableCell>P</TableCell>\n              <TableCell>UK</TableCell>\n              <TableCell>WK</TableCell>\n              <TableCell>Act</TableCell>\n              <TableCell>L1</TableCell>\n              <TableCell>L2</TableCell>\n              <TableCell>L3</TableCell>\n              <TableCell>L4</TableCell>\n              <TableCell>L5</TableCell>\n              <TableCell>Status</TableCell>\n              <TableCell>Language</TableCell>\n              <TableCell>I</TableCell>\n              <TableCell>T</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {texts.map((text) => (\n              <TableRow key={text.id}>\n                <TableCell>\n                  <div\n                    className={styles.title}\n                    style={{\n                      maxHeight: \"5rem\",\n                      display: \"flex\",\n                      justifyContent: \"center\",\n                      overflow: \"scroll\",\n                      scrollbarWidth: \"none\",\n                    }}\n                  >\n                    {text.title}\n                  </div>\n                </TableCell>\n                <TableCell align=\"center\">\n                  {dayjs.utc(text.createdAt).fromNow()}\n                </TableCell>\n                <TableCell>\n                  <TextProgress text={text} />\n                </TableCell>\n                <TableCell>\n                  <TermNumber\n                    text={text}\n                    learningLevel={TermLearningLevel.UnKnow}\n                  />\n                </TableCell>\n                <TableCell>\n                  <TermNumber\n                    text={text}\n                    learningLevel={TermLearningLevel.WellKnow}\n                  />\n                </TableCell>\n                <TableCell align=\"center\" style={{ padding: 0 }}>\n                  <TextActions text={text} onEdit={onEdit} />\n                </TableCell>\n                <TableCell>\n                  <TermNumber\n                    text={text}\n                    learningLevel={TermLearningLevel.Learning1}\n                  />\n                </TableCell>\n                <TableCell>\n                  <TermNumber\n                    text={text}\n                    learningLevel={TermLearningLevel.Learning2}\n                  />\n                </TableCell>\n                <TableCell>\n                  <TermNumber\n                    text={text}\n                    learningLevel={TermLearningLevel.Learning3}\n                  />\n                </TableCell>\n                <TableCell>\n                  <TermNumber\n                    text={text}\n                    learningLevel={TermLearningLevel.Learning4}\n                  />\n                </TableCell>\n                <TableCell>\n                  <TermNumber\n                    text={text}\n                    learningLevel={TermLearningLevel.Learning5}\n                  />\n                </TableCell>\n                <TableCell>\n                  <TextStatus text={text} />\n                </TableCell>\n                <TableCell>\n                  {getTextLanguage(text.languageCode, languages)}\n                </TableCell>\n                <TableCell>\n                  {text.counts ? text.counts[TermLearningLevel.Ignored] : \"-\"}\n                </TableCell>\n                <TableCell>\n                  <TotalTerm value={text.counts} record={text} />\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      )}\n    </TableContainer>\n  );\n};\n\nexport default connect(\n  (state: RootState) => ({\n    texts: state.text.texts,\n    filters: state.text.filters,\n    page: state.text.page,\n    itemPerPage: state.text.itemPerPage,\n    total: state.text.total,\n    languages: state.language.languages,\n  }),\n  {\n    getTexts: getTextsAction,\n    getLanguages: getLanguageAction,\n    deleteText: deleteTextAction,\n    getTermCount: loadTermCountAction,\n  }\n)(TextsTable);\n","import { Button } from \"@mui/material\";\nimport Pagination from '@mui/material/Pagination';\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { getLanguageAction } from \"../../../Actions/LanguageAction\";\nimport {\n  deleteTextAction,\n  getTextsAction,\n  loadTermCountAction, TextFilter,\n} from \"../../../Actions/TextAction\";\nimport TextFilterForm from \"../../Forms/TextFilterForm\";\nimport TextCreateModal from \"../../Modals/TextCreateModal\";\nimport TextEditModal from \"../../Modals/TextEditModal\";\nimport { parseQueryString } from \"../../../Utilities/queryString\";\nimport TextsTable from \"./TextsTable\";\nimport { RootState } from \"../../../RootReducer\";\nimport useDidMountEffect from \"../../../Hooks/useDidMountEffect\";\n\ninterface Props {\n  filters: TextFilter\n  total: number\n  history: any\n  page: number\n  location: any\n  itemPerPage: number\n  getLanguages: Function\n  getTexts: Function\n}\n\n/**\n * text page\n */\nconst TextPage: React.FC<Props> = ({ filters, total, history, page, location, itemPerPage, getLanguages, getTexts }) => {\n  const [createModalVisible, setCreateModalVisible] = React.useState(false)\n  const [editModalVisible, setEditModalVisible] = React.useState(false)\n  const [isLoading, setIsLoading] = React.useState(false)\n  const [editingText, setEditingText] = React.useState<number | null>(null)\n  const query = parseQueryString(location.search);\n  React.useEffect(() => {\n    if (query.page) {\n      loadingAndGetTexts(filters, parseInt(query.page, 10), itemPerPage);\n    } else {\n      loadingAndGetTexts(filters, 1, itemPerPage);\n    }\n    getLanguages();\n  }, []) // eslint-disable-line react-hooks/exhaustive-deps\n\n  const onEdit = () => {\n    filterTexts();\n    setEditingText(null)\n  };\n\n  const loadingAndGetTexts = React.useCallback((filters: TextFilter | undefined, page: number, itemPerPage: number) => {\n    setIsLoading(true)\n    getTexts(filters, page, itemPerPage).then(() => {\n      setIsLoading(false)\n    });\n  }, [getTexts])\n\n  const myGetTexts = React.useCallback((page: number) => {\n    setIsLoading(true)\n    getTexts(filters, page, itemPerPage).then(() => {\n      setIsLoading(false)\n    });\n  }, [filters, getTexts, itemPerPage])\n\n  let queryPage = parseInt(query.page, 10);\n  if (Number.isNaN(queryPage)) {\n    queryPage = 1;\n  }\n  useDidMountEffect(() => {\n    myGetTexts(queryPage)\n  }, [queryPage, myGetTexts])\n\n\n  const hideEditModal = () => {\n    setEditModalVisible(false);\n  };\n\n  const handleEdit = (textId: number) => {\n    setEditingText(textId)\n    setEditModalVisible(true)\n  };\n\n  const handlePageChange = (_: any, page: number) => {\n    history.push(`/text?page=${page.toString()}`);\n  }\n\n  const filterTexts = React.useCallback((filters?: TextFilter) => {\n    loadingAndGetTexts(filters, 1, itemPerPage)\n  }, [itemPerPage, loadingAndGetTexts]);\n\n  const hideCreateModal = () => {\n    setCreateModalVisible(false)\n  }\n\n  const showCreateModal = () => {\n    setCreateModalVisible(true)\n  }\n\n  return (\n    <>\n      <TextEditModal\n        hide={hideEditModal}\n        onEdit={onEdit}\n        editingText={editingText}\n        visible={editModalVisible}\n      />\n      <TextCreateModal\n        hide={hideCreateModal}\n        visible={createModalVisible}\n        onCreate={filterTexts}\n      />\n      <Button\n        color=\"primary\"\n        variant=\"contained\"\n        onClick={showCreateModal}\n      >\n        Add text\n      </Button>\n      <TextFilterForm onFilterChange={filterTexts} values={filters} />\n      <TextsTable isLoading={isLoading} onEdit={handleEdit} />\n      <Pagination\n        count={Math.ceil(total / 10)}\n        page={page}\n        onChange={handlePageChange}\n      />\n    </>\n  );\n}\n\nTextPage.defaultProps = {\n  filters: {\n    title: \"\",\n    languageCode: \"\",\n  },\n}\n\nexport default connect(\n  (state: RootState) => ({\n    texts: state.text.texts,\n    filters: state.text.filters,\n    page: state.text.page,\n    itemPerPage: state.text.itemPerPage,\n    total: state.text.total,\n    languages: state.language.languages,\n  }),\n  {\n    getTexts: getTextsAction,\n    getLanguages: getLanguageAction,\n    deleteText: deleteTextAction,\n    getTermCount: loadTermCountAction,\n  }\n)(TextPage);\n","export const parseQueryString = (queryString: string) => {\n  if (!queryString) {\n    return {};\n  }\n  if (queryString[0] !== \"?\") {\n    throw Error(\"Invalid query string\");\n  }\n  const queries = queryString.substr(1).split(\"&\");\n  const result: { [key: string]: string } = {};\n  queries.forEach(q => {\n    const [key, value] = q.split(\"=\");\n    result[key] = value;\n  });\n  return result;\n};\n","/**\n * TextItem page\n */\nimport TextPage from \"./TextPage\";\n\nexport default TextPage;\n\n"],"sourceRoot":""}
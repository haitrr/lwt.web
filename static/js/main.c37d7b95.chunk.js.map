{"version":3,"sources":["Apis/LanguageApi.ts","App.module.scss","Constants.ts","Components/Header/NavigationItems.tsx","Components/Header/UserMenu/index.tsx","Components/Header/RightMenus.tsx","Components/Header/Header.tsx","Themer.tsx","App.tsx","serviceWorker.ts","Reducers/LanguageReducer.ts","Reducers/TextReducer.ts","Reducers/UserReducer.ts","Utilities/JwtTokenHelper.ts","Reducers/TermReducer.ts","RootReducer.ts","index.tsx","Utilities/HttpRequest.ts","Actions/TextAction.ts","Apis/TextApi.ts","Actions/TermAction.ts","Actions/UserAction.ts","Apis/UserApi.ts","Apis/TermApi.ts","Actions/LanguageAction.ts"],"names":["async","getUserLanguageAsync","getAsync","FUNCTION_ROOT","e","module","exports","API_ROOT","process","DICTIONARY_API_ROOT","TEXT_API","TERM_API","TOKEN_LOCAL_STORAGE_KEY","NavigationItems","isLoggedIn","useSelector","state","user","history","useHistory","IconButton","disabled","onClick","push","size","fontSize","UserMenu","userName","dispatch","useDispatch","anchorEl","setAnchorEl","React","useState","Button","event","currentTarget","Menu","id","keepMounted","open","Boolean","onClose","MenuItem","logout","type","USER_LOGGED_OUT","RightMenus","variant","color","style","marginLeft","Header","AppBar","position","Toolbar","display","justifyContent","flexDirection","Themer","props","prefersDarkMode","useMediaQuery","children","palette","useMemo","mode","primary","main","secondary","tonalOffset","text","theme","createTheme","components","MuiTextField","defaultProps","margin","MuiFormControl","MuiSelect","MuiTableCell","align","StyledEngineProvider","injectFirst","ThemeProvider","CssBaseline","HomePage","lazy","LoginPage","RegisterPage","TextPage","TextReadPage","UserPage","StatisticsPage","queryClient","QueryClient","connect","getLanguages","getLanguageAction","getSetting","getSettingAction","useEffect","client","Paper","height","overflow","className","styles","layout","Helmet","Suspense","fallback","path","exact","component","to","window","location","hostname","match","languageReducer","handleActions","LANGUAGE_GET","action","languages","payload","currentLanguage","length","LANGUAGE_SELECT","defaultState","texts","page","itemPerPage","total","filters","editDetail","undefined","readingText","textReducer","TEXT_FETCHED","TERM_GET","Error","terms","index","term","content","TEXT_READ","error","termIndexEnd","bookmark","termIndexBegin","termLastBeginIndex","Array","termCount","fill","TERM_CREATED","createdTerm","newTerms","i","toUpperCase","TERM_EDITED","editedTerm","TEXT_DELETED","filter","t","TEXT_EDIT_DETAIL_FETCHED","TEXT_TERM_SELECT","TERM_GET_MEANING","termMeaning","meaning","TERM_COUNT_LOADED","counts","findIndex","newText","newTexts","READING_TEXT_TERMS_COUNT_LOADED","termsCountByLearningLevel","TEXT_TERM_LOADED","begin","end","TERM_INDEX_BEGIN_SET","TERM_INDEX_END_SET","TERM_COUNT_IN_TEXT","count","termId","TERM_DICTIONARY","TEXT_TERM_COUNT_GET","textId","map","TEXT_PROCESSED_TERM_COUNT_GET","processedTermCount","VIEWING_TERM_SET","viewingTermIndex","token","localStorage","getItem","jwt_decode","getCurrentUser","userReducer","USER_LOGGED_IN","USER_SETTING_GET","setting","TERM_SET","editingTerm","TERM_EDITING_GET_MEANING","editingTermMeaning","TERM_EDITING_MEANING_RESET","combineReducers","language","termReducer","Sentry","dsn","integrations","Integrations","BrowserTracing","tracesSampleRate","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","promiseMiddleware","thunk","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","defaultResponseErrorHandler","response","status","toast","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","json","Message","catch","statusText","defaultResponseHandler","ok","getAuthenticationHeader","Authorization","postAsync","url","body","handleResponse","fetch","JSON","stringify","cache","headers","method","redirect","referrer","putAsync","params","fullUrl","Object","keys","forEach","key","deleteAsync","patchAsync","field","getTextsAction","createAction","result","getTextsAsync","items","readTextAction","getTextReadAsync","loadTermCountAction","getTermCountByLearningLevelAsync","loadReadingTexttermsCountByLearningLevelAction","createTextAction","createTextAsync","deleteTextAction","deleteTextAsync","success","editTextAction","editTextAsync","getTextEditDetailAction","getTextEditDetailAsync","setBookmarkAction","setTextBookmarkAsync","selectTermAction","getTextTermsAction","indexFrom","indexTo","getTextTermsAsync","setTermIndexBeginAction","setTermIndexEndAction","setViewingTermAction","getTermCountInTextAction","getTermCountInTextAsync","getTermCountAction","getTermCountAsync","getProcessedTermCountAction","getProcessedTermCountAsync","termIndex","getTextCountByLanguages","getLastReadTextAsync","setEditingTermAction","getTermAsync","message","dictionaryTermMeaningAction","from","rs","getTextMeaningAsync","toLowerCase","createTermAction","newTerm","createTermAsync","editTermAction","editTermAsync","getTermMeaningAction","getTermMeaningAsync","loginAction","loginAsync","credentials","getSettingAsync","languageSettings","updateSettingAction","updateSettingAsync","value","registerAction","registerAsync","data","settings","setItem","decode","removeItem","fromLang","toLang","res","info","Promise","resolve","getTermCountByLanguages","languageApi","selectLanguageAction"],"mappings":"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","file":"static/js/main.c37d7b95.chunk.js","sourcesContent":["import {FUNCTION_ROOT} from \"../Constants\";\nimport { getAsync } from \"../Utilities/HttpRequest\";\n\n/**\n * get current user's languages\n */\nexport async function getUserLanguageAsync() {\n  try {\n    return await getAsync(`${FUNCTION_ROOT}/get_languages`, {});\n  } catch (e) {\n    return null;\n  }\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"layout\":\"App_layout__11VGl\"};","/**\n * application constants\n */\n\nexport const API_ROOT = process.env.REACT_APP_API_ROOT;\nexport const DICTIONARY_API_ROOT = process.env.REACT_APP_DICTIONARY_API_ROOT;\nexport const LOGIN_API = `${API_ROOT}/user/login`;\nexport const LOGOUT_API = `${API_ROOT}/user/logout`;\nexport const TEXT_API = `${API_ROOT}/text`;\nexport const TERM_API = `${API_ROOT}/term`;\nexport const TOKEN_LOCAL_STORAGE_KEY = \"token\";\nexport const FUNCTION_ROOT = process.env.REACT_APP_FUNCTION_ROOT;\n","import {useSelector} from \"react-redux\";\nimport {RootState} from \"../../RootReducer\";\nimport {useHistory} from \"react-router\";\nimport {IconButton} from \"@mui/material\";\nimport HomeIcon from \"@mui/icons-material/Home\";\nimport MenuBookIcon from \"@mui/icons-material/MenuBook\";\nimport InsightsIcon from \"@mui/icons-material/Insights\";\nimport React from \"react\";\n\nconst NavigationItems = () => {\n  const isLoggedIn = useSelector((state: RootState) => state.user.isLoggedIn);\n  const history = useHistory();\n  return <>\n    <IconButton disabled={!isLoggedIn} onClick={() => history.push(\"/\")} size=\"large\">\n      <HomeIcon fontSize=\"large\" />\n    </IconButton>\n    <IconButton disabled={!isLoggedIn} onClick={() => history.push(\"/text\")} size=\"large\">\n      <MenuBookIcon fontSize=\"large\" />\n    </IconButton>\n    <IconButton\n      disabled={!isLoggedIn}\n      onClick={() => history.push(\"/statistics\")}\n      size=\"large\">\n      <InsightsIcon fontSize=\"large\" />\n    </IconButton>\n  </>;\n}\n\nexport default NavigationItems;\n","import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Button, Menu, MenuItem } from \"@mui/material\";\nimport { useHistory } from \"react-router\";\nimport { USER_LOGGED_OUT } from \"../../../Actions/UserAction\";\nimport { RootState } from \"../../../RootReducer\";\nimport { logout } from \"../../../Apis/UserApi\";\n\nconst UserMenu: React.FC = () => {\n  const userName = useSelector((state: RootState) => state.user.userName);\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n\n  const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const handleLogout = () => {\n    logout();\n    dispatch({ type: USER_LOGGED_OUT });\n    history.push(\"/login\");\n  };\n\n  return (\n    <div>\n      <Button\n        aria-controls=\"simple-menu\"\n        aria-haspopup=\"true\"\n        onClick={handleClick}\n      >\n        {userName}\n      </Button>\n      <Menu\n        id=\"simple-menu\"\n        anchorEl={anchorEl}\n        keepMounted\n        open={Boolean(anchorEl)}\n        onClose={handleClose}\n      >\n        <MenuItem onClick={() => history.push(\"/profile\")}>Profile</MenuItem>\n        <MenuItem onClick={handleLogout}>Logout</MenuItem>\n      </Menu>\n    </div>\n  );\n};\n\nexport default UserMenu;\n","import {useSelector} from \"react-redux\";\nimport {RootState} from \"../../RootReducer\";\nimport {useHistory} from \"react-router\";\nimport UserMenu from \"./UserMenu\";\nimport {Button} from \"@mui/material\";\nimport React from \"react\";\n\nconst RightMenus = () => {\n  const isLoggedIn = useSelector((state: RootState) => state.user.isLoggedIn);\n  const history = useHistory();\n  return <>\n    {isLoggedIn ? (\n      <UserMenu />\n    ) : (\n      <>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={() => history.push(\"/login\")}\n        >\n          Login\n        </Button>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          style={{ marginLeft: \"1rem\" }}\n          onClick={() => history.push(\"/register\")}\n        >\n          Register\n        </Button>\n      </>\n    )}\n  </>\n}\n\nexport default RightMenus;\n","import React from \"react\";\nimport { AppBar, Toolbar } from \"@mui/material\";\nimport NavigationItems from \"./NavigationItems\";\nimport RightMenus from \"./RightMenus\";\n\n\nconst Header = () => {\n  return (\n    <AppBar position=\"sticky\">\n      <Toolbar style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n        <div style={{ display: \"flex\", flexDirection: \"row\" }}>\n          <NavigationItems/>\n        </div>\n        <div>\n          <RightMenus/>\n        </div>\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nexport default Header;\n","import {CssBaseline, useMediaQuery} from \"@mui/material\";\nimport React from \"react\";\nimport {createTheme, ThemeProvider, StyledEngineProvider, PaletteOptions} from \"@mui/material/styles\";\n\n\nconst Themer: React.FC = (props) => {\n  const prefersDarkMode = useMediaQuery(\"(prefers-color-scheme: dark)\");\n  const {children} = props;\n\n  const palette: PaletteOptions = React.useMemo(() => ({\n    mode: prefersDarkMode ? \"dark\" : \"light\",\n    primary: {\n      main: \"#33ab9f\",\n    },\n    secondary: {\n      main: \"#ff6333\",\n    },\n    tonalOffset: 0.2,\n  }), [prefersDarkMode]);\n\n  if (prefersDarkMode) {\n    palette.primary = {\n      main: \"#00695f\",\n    };\n    palette.secondary = {\n      main: \"#b26500\",\n    };\n    palette.text = {\n      primary: \"#dedede\",\n      secondary: \"#999999\",\n    };\n  }\n  const theme = React.useMemo(\n    () =>\n      createTheme({\n        components: {\n          MuiTextField: {\n            defaultProps: {\n              margin: 'dense',\n            }\n          },\n          MuiFormControl: {\n            defaultProps: {\n              margin: 'dense',\n            }\n          },\n          MuiSelect: {\n            defaultProps: {\n              margin: 'dense',\n            }\n          },\n          MuiTableCell: {\n            defaultProps: {\n              align: 'center',\n            }\n          },\n        },\n        palette,\n      }),\n    [palette]\n  );\n  return (\n    <StyledEngineProvider injectFirst>\n      <ThemeProvider theme={theme}>\n        <CssBaseline/>\n        {children}\n      </ThemeProvider>\n    </StyledEngineProvider>\n  );\n};\n\nexport default Themer;\n","import React from \"react\";\nimport {connect} from \"react-redux\";\nimport {Redirect, Route} from \"react-router\";\nimport {BrowserRouter} from \"react-router-dom\";\nimport {Helmet} from \"react-helmet\";\nimport {Paper} from \"@mui/material\";\nimport styles from \"./App.module.scss\";\nimport Header from \"./Components/Header/Header\";\nimport {getLanguageAction} from \"./Actions/LanguageAction\";\nimport {getSettingAction} from \"./Actions/UserAction\";\nimport Themer from \"./Themer\";\nimport {ToastContainer} from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport {RootState, UserState} from \"./RootReducer\";\nimport {QueryClient, QueryClientProvider} from \"react-query\";\n\nconst HomePage = React.lazy(() => import('./Components/Pages/HomePage'))\nconst LoginPage = React.lazy(() => import('./Components/Pages/LoginPage/LoginPage'))\nconst RegisterPage = React.lazy(() => import('./Components/Pages/RegisterPage'))\nconst TextPage = React.lazy(() => import('./Components/Pages/TextPage'))\nconst TextReadPage = React.lazy(() => import('./Components/Pages/TextReadPage'))\nconst UserPage = React.lazy(() => import('./Components/Pages/UserPage'))\nconst StatisticsPage = React.lazy(() => import('./Components/Pages/StatisticsPage'))\n\ninterface Props {\n  user: UserState;\n  getSetting: Function;\n  getLanguages: Function;\n}\n\nconst queryClient = new QueryClient()\n\n/**\n * app.\n */\nconst App: React.FC<Props> = ({user, getSetting, getLanguages}) => {\n  React.useEffect(() => {\n    if (user.isLoggedIn) {\n      getSetting();\n    }\n    getLanguages();\n  }, []) // eslint-disable-line react-hooks/exhaustive-deps\n\n  React.useEffect(() => {\n    if (user.isLoggedIn) {\n      getSetting();\n    }\n  }, [user.isLoggedIn]) // eslint-disable-line react-hooks/exhaustive-deps\n\n  return (\n    <Themer>\n      <QueryClientProvider client={queryClient}>\n        <Paper style={{height: \"-webkit-fill-available\", overflow: \"scroll\" }}>\n          <BrowserRouter>\n            <div className={styles.layout}>\n              <ToastContainer/>\n              <Helmet>\n                <title>Lwt</title>\n              </Helmet>\n              <Header/>\n              <React.Suspense fallback={<div>Loading..</div>}>\n                <Route path=\"/login\" exact component={LoginPage}/>\n                <Route path=\"/register\" exact component={RegisterPage}/>\n                {user.isLoggedIn ? (\n                  <>\n                    <Route path=\"/\" exact component={HomePage}/>\n                    <Route path=\"/text\" exact component={TextPage}/>\n                    <Route path=\"/statistics\" exact component={StatisticsPage}/>\n                    <Route\n                      path=\"/text/read/:textId\"\n                      exact\n                      component={TextReadPage}\n                    />\n                    <Route path=\"/profile\" exact component={UserPage}/>\n                  </>\n                ) : (\n                  <Redirect to=\"/login\"/>\n                )}\n              </React.Suspense>\n            </div>\n          </BrowserRouter>\n        </Paper>\n      </QueryClientProvider>\n    </Themer>\n  );\n}\n\nexport default connect(\n  (state: RootState) => ({\n    user: state.user,\n  }),\n  {\n    getLanguages: getLanguageAction,\n    getSetting: getSettingAction,\n  }\n)(App);\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.1/8 is considered localhost for IPv4.\n  window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n)\n\nexport function register(config: any) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.toString())\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log('This web app is being served cache-first by a service worker. To learn more, visit https://goo.gl/SC7cgQ')\n        })\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl: string, config: any) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker) {\n          installingWorker.onstatechange = () => {\n            if (installingWorker.state === 'installed') {\n              if (navigator.serviceWorker.controller) {\n                // At this point, the old content will have been purged and\n                // the fresh content will have been added to the cache.\n                // It's the perfect time to display a \"New content is\n                // available; please refresh.\" message in your web app.\n                console.log('New content is available; please refresh.')\n\n                // Execute callback\n                if (config.onUpdate) {\n                  config.onUpdate(registration)\n                }\n              } else {\n                // At this point, everything has been precached.\n                // It's the perfect time to display a\n                // \"Content is cached for offline use.\" message.\n                console.log('Content is cached for offline use.')\n\n                // Execute callback\n                if (config.onSuccess) {\n                  config.onSuccess(registration)\n                }\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl: string, config: any) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (response.status === 404 || response.headers.get('content-type')?.indexOf('javascript') === -1) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.')\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","/**\n * Language reducers\n */\nimport {handleActions} from \"redux-actions\";\nimport {LANGUAGE_GET, LANGUAGE_SELECT} from \"../Actions/LanguageAction\";\nimport {LanguageState} from \"../RootReducer\";\n\n\nconst defaultState: LanguageState = {\n  languages: [],\n  currentLanguage: \"en\",\n};\n\nexport const languageReducer = handleActions<LanguageState, any>(\n  {\n    [LANGUAGE_GET]: (state, action) => ({\n      ...state,\n      languages: action.payload,\n      currentLanguage:\n        state.currentLanguage === \"\"\n          ? action.payload.length > 0\n            ? action.payload[0].id\n            : null\n          : state.currentLanguage\n    }),\n    [LANGUAGE_SELECT]: (state, action) => ({\n      ...state,\n      currentLanguage: action.payload\n    })\n  },\n  defaultState\n);\n","import { handleActions } from \"redux-actions\";\nimport {\n  TERM_COUNT_LOADED,\n  TERM_INDEX_BEGIN_SET,\n  TERM_INDEX_END_SET,\n  TEXT_DELETED,\n  TEXT_EDIT_DETAIL_FETCHED,\n  TEXT_FETCHED,\n  TEXT_READ,\n  TEXT_TERM_LOADED,\n  TEXT_TERM_SELECT,\n  READING_TEXT_TERMS_COUNT_LOADED,\n  TERM_COUNT_IN_TEXT,\n  TEXT_TERM_COUNT_GET,\n  TEXT_PROCESSED_TERM_COUNT_GET,\n  VIEWING_TERM_SET,\n} from \"../Actions/TextAction\";\nimport {\n  TERM_CREATED,\n  TERM_DICTIONARY,\n  TERM_EDITED,\n  TERM_GET,\n  TERM_GET_MEANING,\n} from \"../Actions/TermAction\";\n\n/**\n * text reducer\n */\n\nexport interface TextEditDetail {}\n\nexport interface TextState {\n  total: number;\n  itemPerPage: number;\n  page: number;\n  filters: any;\n  editDetail: TextEditDetail | undefined;\n  texts: TextItem[];\n  readingText: ReadingTextState | null;\n}\n\nexport interface Term {\n  learningLevel: string;\n  index: number;\n  id: number;\n  count: number;\n  meaning: string;\n  content: string;\n}\n\nexport interface ReadingTextState {\n  id: any;\n  title: string;\n  terms: Term[];\n  termIndexBegin: number;\n  termLastBeginIndex: number;\n  termsCountByLearningLevel: any;\n  bookmark: number;\n  termCount: number;\n  termIndexEnd: number;\n  viewingTermIndex: number;\n  languageCode: string;\n}\n\nexport interface TextItem {\n  createdAt: string;\n  termCount: number;\n  progress: number;\n  bookmark: number;\n  counts: any;\n  languageCode: string;\n  title: string;\n  id: number;\n  processedTermCount: number;\n}\n\nconst defaultState = {\n  texts: [],\n  page: 1,\n  itemPerPage: 10,\n  total: 0,\n  filters: {},\n  editDetail: undefined,\n  readingText: null,\n};\n\n// @ts-ignore\nconst textReducer = handleActions<TextState, any>(\n  {\n    [TEXT_FETCHED]: (state, action) => {\n      const { payload } = action;\n      if (payload === null) {\n        return { ...state, texts: [] };\n      }\n      return { ...payload };\n    },\n    [TERM_GET]: (state, action) => {\n      if (!state.readingText) {\n        throw new Error();\n      }\n      const terms = [...state.readingText.terms];\n      terms[action.payload.index] = {\n        ...terms[action.payload.index],\n        ...action.payload.term,\n        content: terms[action.payload.index].content,\n      };\n      return {\n        ...state,\n        readingText: {\n          ...state.readingText,\n          terms,\n        },\n      };\n    },\n    [TEXT_READ]: (state, action) => {\n      if (action.error) {\n        return state;\n      }\n      return {\n        ...state,\n        readingText: {\n          ...action.payload,\n          termIndexEnd: action.payload.bookmark ?? 0,\n          termIndexBegin: action.payload.bookmark ?? 0,\n          termLastBeginIndex: -1,\n          terms: new Array(action.payload.termCount).fill(null),\n        },\n      };\n    },\n    [TERM_CREATED]: (state, action) => {\n      const createdTerm = action.payload;\n      if (!createdTerm || !state.readingText) {\n        return state;\n      }\n      const { readingText } = state;\n      const newTerms = [...readingText.terms];\n      const { termIndexBegin, termIndexEnd } = state.readingText;\n      for (let i = termIndexBegin; i <= termIndexEnd; i += 1) {\n        if (newTerms[i]) {\n          if (\n            newTerms[i].content.toUpperCase() ===\n            createdTerm.content.toUpperCase()\n          ) {\n            newTerms[i] = {\n              ...createdTerm,\n              content: newTerms[i].content,\n              index: i,\n            };\n          }\n        }\n      }\n      return { ...state, readingText: { ...readingText, terms: newTerms } };\n    },\n    [TERM_EDITED]: (state, action) => {\n      const editedTerm = action.payload;\n      if (!editedTerm || !state.readingText) {\n        return state;\n      }\n      const { readingText } = state;\n      const newTerms = [...readingText.terms];\n      const { termIndexBegin, termIndexEnd } = readingText;\n      for (let i = termIndexBegin; i <= termIndexEnd; i += 1) {\n        if (newTerms[i]) {\n          if (\n            newTerms[i].content.toUpperCase() ===\n            editedTerm.content.toUpperCase()\n          ) {\n            newTerms[i] = {\n              ...editedTerm,\n              content: newTerms[i].content,\n              index: i,\n            };\n          }\n        }\n      }\n      return { ...state, readingText: { ...readingText, terms: newTerms } };\n    },\n    [TEXT_DELETED]: (state, action) => {\n      if (action.payload) {\n        return {\n          ...state,\n          texts: state.texts.filter((t) => t.id !== action.payload),\n        };\n      }\n      return state;\n    },\n    [TEXT_EDIT_DETAIL_FETCHED]: (state, action) => {\n      if (action.payload) {\n        return {\n          ...state,\n          editDetail: action.payload,\n        };\n      }\n      return state;\n    },\n    [TEXT_TERM_SELECT]: (state, action) => {\n      if (!state.readingText) return state;\n      return {\n        ...state,\n        readingText: { ...state.readingText, bookmark: action.payload },\n      };\n    },\n\n    [TERM_GET_MEANING]: (state, action) => {\n      if (!action.payload || !state.readingText) {\n        return state;\n      }\n      const { index, termMeaning } = action.payload;\n\n      const { terms } = state.readingText;\n      terms[index] = { ...terms[index], meaning: termMeaning.meaning };\n      return { ...state, readingText: { ...state.readingText, terms } };\n    },\n    [TERM_COUNT_LOADED]: (state, action) => {\n      if (!action.payload) {\n        return state;\n      }\n      const { id, counts } = action.payload;\n      const index = state.texts.findIndex((t) => t.id === id);\n      if (index < 0) {\n        return state;\n      }\n      const newText = { ...state.texts[index], counts };\n      const newTexts = [...state.texts];\n      newTexts[index] = newText;\n      return { ...state, texts: newTexts };\n    },\n    [READING_TEXT_TERMS_COUNT_LOADED]: (state, action) => {\n      if (!action.payload || !state.readingText) {\n        return state;\n      }\n      const { counts } = action.payload;\n      return {\n        ...state,\n        readingText: {\n          ...state.readingText,\n          termsCountByLearningLevel: counts,\n        },\n      };\n    },\n    [TEXT_TERM_LOADED]: (state, action) => {\n      if (!state.readingText) {\n        return state;\n      }\n      const { terms, begin, end } = action.payload;\n\n      const newTerms = [...state.readingText.terms];\n      for (let i = begin; i < end + 1; i += 1) {\n        newTerms[i] = { ...terms[i - begin], ...newTerms[i] };\n      }\n      return {\n        ...state,\n        readingText: {\n          ...state.readingText,\n          terms: newTerms,\n        },\n      };\n    },\n    [TERM_INDEX_BEGIN_SET]: (state, action) => {\n      if (!state.readingText) return state;\n      let termLastBeginIndex = state.readingText.termIndexBegin;\n      if (termLastBeginIndex === state.readingText.bookmark) {\n        termLastBeginIndex += 1;\n      }\n\n      return {\n        ...state,\n        readingText: {\n          ...state.readingText,\n          termIndexBegin: action.payload,\n          termLastBeginIndex,\n        },\n      };\n    },\n    [TERM_INDEX_END_SET]: (state, action) => {\n      if (!state.readingText) return state;\n      return {\n        ...state,\n        readingText: { ...state.readingText, termIndexEnd: action.payload },\n      };\n    },\n    [TERM_COUNT_IN_TEXT]: (state, action) => {\n      if (!state.readingText) {\n        return state;\n      }\n      const { count, termId } = action.payload;\n      const { readingText } = state;\n      const newTerms = [...readingText.terms];\n      const { termIndexBegin, termIndexEnd } = readingText;\n      for (let i = termIndexBegin; i <= termIndexEnd; i += 1) {\n        if (newTerms[i]) {\n          if (newTerms[i].id === termId) {\n            newTerms[i] = { ...newTerms[i], count };\n          }\n        }\n      }\n      return { ...state, readingText: { ...readingText, terms: newTerms } };\n    },\n    [TERM_DICTIONARY]: (state, action) => {\n      if (!action.payload || !state.readingText) {\n        return state;\n      }\n      const { index, meaning } = action.payload;\n\n      const { terms } = state.readingText;\n      terms[index] = { ...terms[index], meaning };\n      return { ...state, readingText: { ...state.readingText, terms } };\n    },\n    [TEXT_TERM_COUNT_GET]: (state, action) => {\n      const { termCount, textId } = action.payload;\n      const newTexts = state.texts.map((t) =>\n        t.id === textId ? { ...t, termCount } : t\n      );\n      return { ...state, texts: newTexts };\n    },\n    [TEXT_PROCESSED_TERM_COUNT_GET]: (state, action) => {\n      const { processedTermCount, textId } = action.payload;\n      const newTexts = state.texts.map((t) =>\n        t.id === textId ? { ...t, processedTermCount } : t\n      );\n      return { ...state, texts: newTexts };\n    },\n    [VIEWING_TERM_SET]: (state, action) => {\n      if (!state.readingText) {\n        return state;\n      }\n      const { index } = action.payload;\n      return {\n        ...state,\n        readingText: { ...state.readingText, viewingTermIndex: index },\n      };\n    },\n  },\n  defaultState\n);\n\nexport default textReducer;\n","import { handleActions } from \"redux-actions\";\nimport {\n  USER_LOGGED_IN,\n  USER_LOGGED_OUT,\n  USER_SETTING_GET\n} from \"../Actions/UserAction\";\nimport { getCurrentUser } from \"../Utilities/JwtTokenHelper\";\n\nexport interface UserLanguageSetting {\n  languageCode: string;\n  dictionaryLanguageCode: string;\n}\n\nexport interface UserState {\n  isLoggedIn: boolean;\n  languageSettings?: UserLanguageSetting[]\n  id?: number;\n  userName?: string;\n}\n\nconst user = getCurrentUser();\n/**\n * default state\n */\nconst defaultState: UserState =\n  user != null ? { isLoggedIn: true, ...user } : { isLoggedIn: false };\n\n/**\n * user reducer\n */\nexport const userReducer = handleActions(\n  {\n    [USER_LOGGED_IN]: (state, action) => ({\n      ...state,\n      ...action.payload\n    }),\n    [USER_LOGGED_OUT]: () => ({ isLoggedIn: false }),\n    [USER_SETTING_GET]: (state, action) => ({\n      ...state,\n      setting: action.payload\n    })\n  },\n  defaultState\n);\n","import jwt_decode from \"jwt-decode\";\nimport { TOKEN_LOCAL_STORAGE_KEY } from \"../Constants\";\n\n\nexport interface UserData {\n  id: number;\n  userName: string;\n}\n\n/**\n * get the current user from token\n */\nexport function getCurrentUser(): UserData | null {\n  const token = localStorage.getItem(TOKEN_LOCAL_STORAGE_KEY);\n  if (token != null) {\n    return jwt_decode(token);\n  } else {\n    return null;\n  }\n}\n","import { handleActions } from \"redux-actions\";\nimport {\n  TERM_CREATED,\n  TERM_EDITING_GET_MEANING,\n  TERM_EDITING_MEANING_RESET,\n  TERM_SET,\n} from \"../Actions/TermAction\";\n\nexport interface TermState {\n  editingTerm: number | null;\n}\n\nconst defaultState: TermState = {\n  editingTerm: null,\n};\nexport default handleActions<TermState, any>(\n  {\n    [TERM_SET]: (state, action) => {\n      return { ...state, editingTerm: action.payload };\n    },\n    [TERM_CREATED]: (state) => ({\n      ...state,\n      editingTerm: null,\n    }),\n    [TERM_EDITING_GET_MEANING]: (state, action) => ({\n      ...state,\n      editingTermMeaning: action.payload,\n    }),\n    [TERM_EDITING_MEANING_RESET]: (state) => ({\n      ...state,\n      editingTermMeaning: \"\",\n    }),\n  },\n  defaultState\n);\n","import { combineReducers } from \"redux\";\nimport { languageReducer } from \"./Reducers/LanguageReducer\";\nimport textReducer, { TextState } from \"./Reducers/TextReducer\";\nimport {UserLanguageSetting, userReducer} from \"./Reducers/UserReducer\";\nimport termReducer, {TermState} from \"./Reducers/TermReducer\";\n\nexport interface Language {\n  code: string;\n  name: string;\n  speakCode: string;\n}\n\nexport interface LanguageState {\n  currentLanguage: string;\n  languages: Language[];\n}\n\nexport interface UserSetting {\n  languageSettings: UserLanguageSetting[]\n}\n\nexport interface UserState {\n  isLoggedIn: boolean;\n  userName: string;\n  setting: UserSetting;\n}\n\nexport interface RootState {\n  language: LanguageState;\n  text: TextState;\n  user: UserState;\n  term: TermState;\n}\n\n/**\n * root reducer\n */\nexport default combineReducers({\n  user: userReducer,\n  language: languageReducer,\n  text: textReducer,\n  term: termReducer,\n});\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport { applyMiddleware, createStore } from \"redux\";\nimport promiseMiddleware from \"redux-promise\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { Provider } from \"react-redux\";\nimport * as Sentry from \"@sentry/browser\";\nimport { Integrations } from \"@sentry/tracing\";\nimport thunk from \"redux-thunk\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport rootReducer from \"./RootReducer\";\n\nif (process.env.NODE_ENV === \"production\") {\n  Sentry.init({\n    dsn:\n      \"https://8658bd7f18634bd19522e701bcb946e4@o476836.ingest.sentry.io/5517012\",\n    integrations: [new Integrations.BrowserTracing()],\n\n    tracesSampleRate: 1.0,\n  });\n}\n\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(applyMiddleware(promiseMiddleware, thunk))\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import { toast } from \"react-toastify\";\nimport { TOKEN_LOCAL_STORAGE_KEY } from \"../Constants\";\n\nfunction defaultResponseErrorHandler(response: any) {\n  if (\n    response.status === 404 ||\n    response.status === 502 ||\n    response.status === 503\n  ) {\n      toast.error(\"Failed to connect to server, please try again later.\", {\n        position: \"top-right\",\n        autoClose: 5000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n        });\n  } else if (response.status === 400) {\n    response.json().then((error: any) => {\n      toast.error(error.Message, {\n        position: \"top-right\",\n        autoClose: 5000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n        });\n    }).catch(() => {\n      toast.error(\"Bad request\", {\n        position: \"top-right\",\n        autoClose: 5000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n        });\n    });\n  } else {\n    toast.error(`Error connecting with server ${response.status}:${response.statusText}`, {\n      position: \"top-right\",\n      autoClose: 5000,\n      hideProgressBar: false,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined,\n      });\n  }\n  throw response;\n}\nasync function defaultResponseHandler(response: Response) {\n  if (response.ok) {\n    try {\n      return await response.json();\n    } catch (e) {\n      return null;\n    }\n  } else {\n    throw response;\n  }\n}\n\nfunction getAuthenticationHeader() {\n  const token = localStorage.getItem(TOKEN_LOCAL_STORAGE_KEY);\n  if (token != null) {\n    return { Authorization: `bearer ${token}` };\n  }\n\n  return null;\n}\n\n/**\n * perform a post request\n * @param url the request url\n * @param body body of the request\n * @param handleResponse response handler\n */\nexport async function postAsync(\n  url: string,\n  body: object,\n  handleResponse = defaultResponseHandler\n) {\n  return fetch(url, {\n    body: JSON.stringify(body), // body data type must match \"Content-Type\" header\n    cache: \"no-cache\", // *default, no-cache, reload, force-cache, only-if-cached\n    // credentials: \"include\", // include, same-origin, *omit\n    headers: {\n      \"Content-Type\": \"application/json; charset=utf-8\",\n      ...getAuthenticationHeader()\n      // \"Content-Type\": \"application/x-www-form-urlencoded\",\n    },\n    method: \"POST\", // *GET, POST, PUT, DELETE, etc.\n    mode: \"cors\", // no-cors, cors, *same-origin\n    redirect: \"follow\", // manual, *follow, error\n    referrer: \"no-referrer\" // no-referrer, *client\n  })\n    .then(handleResponse)\n    .catch(defaultResponseErrorHandler);\n}\n\nexport async function putAsync(\n  url: string,\n  id: number | string,\n  body: object,\n  handleResponse = defaultResponseHandler\n) {\n  return fetch(`${url}/${id}`, {\n    body: JSON.stringify(body), // body data type must match \"Content-Type\" header\n    cache: \"no-cache\", // *default, no-cache, reload, force-cache, only-if-cached\n    // credentials: \"include\", // include, same-origin, *omit\n    headers: {\n      \"Content-Type\": \"application/json; charset=utf-8\",\n      ...getAuthenticationHeader()\n      // \"Content-Type\": \"application/x-www-form-urlencoded\",\n    },\n    method: \"PUT\", // *GET, POST, PUT, DELETE, etc.\n    mode: \"cors\", // no-cors, cors, *same-origin\n    redirect: \"follow\", // manual, *follow, error\n    referrer: \"no-referrer\" // no-referrer, *client\n  })\n    .then(handleResponse)\n    .catch(defaultResponseErrorHandler);\n}\n\nexport async function getAsync(\n  url: string,\n  params?: {[key: string]: string | number},\n  handleResponse = defaultResponseHandler\n) {\n  let fullUrl = url;\n  if (params != null) {\n    fullUrl += \"?\";\n    Object.keys(params).forEach(key => {\n      if (params[key] != null) {\n        fullUrl += `${key}=${params[key]}&`;\n      }\n    });\n  }\n\n  return fetch(fullUrl, {\n    cache: \"default\", // *default, no-cache, reload, force-cache, only-if-cached\n    // credentials: \"include\", // include, same-origin, *omit\n    headers: {\n      \"Content-Type\": \"application/json; charset=utf-8\",\n      ...getAuthenticationHeader()\n      // \"Content-Type\": \"application/x-www-form-urlencoded\",\n    },\n    method: \"GET\", // *GET, POST, PUT, DELETE, etc.\n    mode: \"cors\", // no-cors, cors, *same-origin\n    redirect: \"follow\", // manual, *follow, error\n    referrer: \"no-referrer\" // no-referrer, *client\n  })\n    .then(handleResponse)\n    .catch(defaultResponseErrorHandler);\n}\n\nexport async function deleteAsync(\n  url: string,\n  params?: {[key: string]: string},\n  handleResponse = defaultResponseHandler\n) {\n  let fullUrl = url;\n  if (params != null) {\n    fullUrl += \"?\";\n    Object.keys(params).forEach(key => {\n      if (params[key] != null) {\n        fullUrl += `${key}=${params[key]}&`;\n      }\n    });\n  }\n\n  return fetch(fullUrl, {\n    cache: \"no-cache\", // *default, no-cache, reload, force-cache, only-if-cached\n    // credentials: \"include\", // include, same-origin, *omit\n    headers: {\n      \"Content-Type\": \"application/json; charset=utf-8\",\n      ...getAuthenticationHeader()\n      // \"Content-Type\": \"application/x-www-form-urlencoded\",\n    },\n    method: \"DELETE\", // *GET, POST, PUT, DELETE, etc.\n    mode: \"cors\", // no-cors, cors, *same-origin\n    redirect: \"follow\", // manual, *follow, error\n    referrer: \"no-referrer\" // no-referrer, *client\n  })\n    .then(handleResponse)\n    .catch(defaultResponseErrorHandler);\n}\n\nexport async function patchAsync(\n  url: string,\n  id: number,\n  field: string,\n  body: object,\n  handleResponse = defaultResponseHandler\n) {\n  return fetch(`${url}/${id}/${field}`, {\n    body: JSON.stringify(body), // body data type must match \"Content-Type\" header\n    cache: \"no-cache\", // *default, no-cache, reload, force-cache, only-if-cached\n    // credentials: \"include\", // include, same-origin, *omit\n    headers: {\n      \"Content-Type\": \"application/json; charset=utf-8\",\n      ...getAuthenticationHeader()\n      // \"Content-Type\": \"application/x-www-form-urlencoded\",\n    },\n    method: \"PATCH\", // *GET, POST, PUT, DELETE, etc.\n    mode: \"cors\", // no-cors, cors, *same-origin\n    redirect: \"follow\", // manual, *follow, error\n    referrer: \"no-referrer\" // no-referrer, *client\n  })\n    .then(handleResponse)\n    .catch(defaultResponseErrorHandler);\n}\n","import { toast } from \"react-toastify\";\nimport { createAction } from \"redux-actions\";\nimport {\n  createTextAsync,\n  deleteTextAsync,\n  editTextAsync,\n  getTermCountByLearningLevelAsync,\n  getTextEditDetailAsync,\n  getTextReadAsync,\n  getTextsAsync,\n  getTextTermsAsync,\n  setTextBookmarkAsync,\n  getTermCountInTextAsync,\n  getTermCountAsync,\n  getProcessedTermCountAsync,\n} from \"../Apis/TextApi\";\n\nexport const TEXT_FETCHED = \"TEXT_FETCHED\";\nexport const TEXT_CREATED = \"TEXT_CREATED\";\nexport const TEXT_DELETED = \"TEXT_DELETED\";\nexport const TEXT_READ = \"TEXT_READ\";\nexport const TEXT_EDITED = \"TEXT_EDITED\";\nexport const TEXT_EDIT_DETAIL_FETCHED = \"TEXT_EDIT_DETAIL_FETCHED\";\nexport const TEXT_BOOKMARK_SET = \"TEXT_BOOKMARK_SET\";\nexport const TEXT_TERM_SELECT = \"TEXT_TERM_SELECT\";\nexport const TERM_COUNT_LOADED = \"TERM_COUNT_LOADED\";\nexport const READING_TEXT_TERMS_COUNT_LOADED =\n  \"READING_TEXT_TERMS_COUNT_LOADED\";\nexport const TEXT_TERM_LOADED = \"TEXT_TERM_LOADED\";\nexport const TERM_INDEX_BEGIN_SET = \"TERM_INDEX_BEGIN_SET\";\nexport const TERM_INDEX_END_SET = \"TERM_INDEX_END_SET\";\nexport const TERM_COUNT_IN_TEXT = \"TERM_COUNT_IN_TEXT\";\nexport const TEXT_TERM_COUNT_GET = \"TEXT_TERM_COUNT_GET\";\nexport const TEXT_PROCESSED_TERM_COUNT_GET = \"TEXT_PROCESSED_TERM_COUNT_GET\";\nexport const VIEWING_TERM_SET = \"VIEWING_TERM_SET\";\n\nexport interface TextFilter {\n  title: string;\n  languageCode: string;\n}\n\n/**\n * get texts action\n */\nexport const getTextsAction = createAction(\n  TEXT_FETCHED,\n  async (filters: TextFilter, page: number, itemPerPage: number) => {\n    const result = await getTextsAsync(filters, page, itemPerPage);\n\n    return {\n      texts: result.items,\n      total: result.total,\n      page,\n      itemPerPage,\n      filters,\n    };\n  }\n);\n\n/**\n * set reading text.\n */\n\nexport const readTextAction = createAction(TEXT_READ, (textId: number) =>\n  getTextReadAsync(textId)\n);\n\nexport const loadTermCountAction = createAction(\n  TERM_COUNT_LOADED,\n  async (textId: number) => getTermCountByLearningLevelAsync(textId)\n);\n\nexport const loadReadingTexttermsCountByLearningLevelAction = createAction(\n  READING_TEXT_TERMS_COUNT_LOADED,\n  async (textId: number) => getTermCountByLearningLevelAsync(textId)\n);\n\n/**\n * create text action\n */\nexport const createTextAction = createAction(TEXT_CREATED, async (text: Text) =>\n  createTextAsync(text)\n);\n\nexport const deleteTextAction = createAction(TEXT_DELETED, async (textId: number) => {\n  try {\n    await deleteTextAsync(textId);\n    toast.success(\"TextItem deleted.\");\n    return textId;\n  } catch {\n    toast.error(\"Can't not delete text, please try again.\");\n    return null;\n  }\n});\n\nexport const editTextAction = createAction(TEXT_EDITED, async (id: number, text: Text) => {\n  try {\n    await editTextAsync(id, text);\n    toast.success(\"TextItem saved successfully.\");\n    return text;\n  } catch {\n    toast.error(\"Can't not save text , please try again.\");\n    return null;\n  }\n});\n\nexport const getTextEditDetailAction = createAction(\n  TEXT_EDIT_DETAIL_FETCHED,\n  async (textId: number) => {\n    try {\n      return await getTextEditDetailAsync(textId);\n    } catch {\n      toast.error(\"Something wen't wrong, please try again.\");\n      return null;\n    }\n  }\n);\n\nexport const setBookmarkAction = createAction(\n  TEXT_BOOKMARK_SET,\n  async (id: number, index: number) => {\n    await setTextBookmarkAsync(id, index);\n  }\n);\nexport const selectTermAction = createAction(\n  TEXT_TERM_SELECT,\n  async (index: number) => index\n);\n\nexport const getTextTermsAction = createAction(\n  TEXT_TERM_LOADED,\n  async (textId: number, indexFrom: number, indexTo: number) => {\n    const result = await getTextTermsAsync(textId, indexFrom, indexTo);\n    return { ...result, begin: indexFrom, end: indexTo };\n  }\n);\n\nexport const setTermIndexBeginAction = createAction(\n  TERM_INDEX_BEGIN_SET,\n  (begin: number) => begin\n);\nexport const setTermIndexEndAction = createAction(\n  TERM_INDEX_END_SET,\n  (end: number) => end\n);\n\nexport const setViewingTermAction = (index: number) => (dispatch: Function) => {\n  dispatch({ type: VIEWING_TERM_SET, payload: { index } });\n};\n\nexport const getTermCountInTextAction = createAction(\n  TERM_COUNT_IN_TEXT,\n  (termId: number, textId: number) => getTermCountInTextAsync(termId, textId)\n);\n\nexport const getTermCountAction = createAction(\n  TEXT_TERM_COUNT_GET,\n  async (textId: number) => {\n    const { termCount } = await getTermCountAsync(textId);\n    return { termCount, textId };\n  }\n);\nexport const getProcessedTermCountAction = createAction(\n  TEXT_PROCESSED_TERM_COUNT_GET,\n  async (textId: number) => {\n    const { processedTermCount } = await getProcessedTermCountAsync(textId);\n    return { processedTermCount, textId };\n  }\n);\n","import { TEXT_API } from \"../Constants\";\nimport {\n  deleteAsync,\n  getAsync,\n  postAsync,\n  putAsync,\n  patchAsync,\n} from \"../Utilities/HttpRequest\";\nimport {TextFilter} from \"../Actions/TextAction\";\nimport {TextItem} from \"../Reducers/TextReducer\";\n\n/**\n * Get the list of text\n */\nexport async function getTextsAsync(filters: TextFilter, page: number, itemPerPage: number) {\n  try {\n    return await getAsync(TEXT_API, {\n      ...filters,\n      page,\n      itemPerPage,\n    });\n  } catch (e) {\n    return null;\n  }\n}\n\n/**\n * create a text\n * @param text the text to create\n */\nexport async function createTextAsync(text: Text) {\n  try {\n    await postAsync(TEXT_API, text);\n\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * create a text\n * @param textId the text id to get\n */\nexport async function getTextReadAsync(textId: number) {\n  try {\n    return await getAsync(`${TEXT_API}/${textId}`);\n  } catch (e) {\n    return false;\n  }\n}\n\nexport async function getTermCountByLearningLevelAsync(textId: number) {\n  return getAsync(`${TEXT_API}/${textId}/term-counts`);\n}\n\nexport async function deleteTextAsync(textId: number) {\n  return deleteAsync(`${TEXT_API}/${textId}`);\n}\n\nexport async function editTextAsync(id: number, text: Text) {\n  return putAsync(TEXT_API, id, text);\n}\n\nexport async function getTextEditDetailAsync(textId: number) {\n  return getAsync(`${TEXT_API}/${textId}/edit-details`);\n}\n\nexport async function setTextBookmarkAsync(id: number, index: number) {\n  return patchAsync(`${TEXT_API}`, id, \"bookmark\", { termIndex: index });\n}\nexport async function getTextTermsAsync(textId: number, indexFrom: number, indexTo: number) {\n  return getAsync(`${TEXT_API}/${textId}/terms`, { indexFrom, indexTo });\n}\n\nexport async function getTermCountInTextAsync(termId: number, textId: number) {\n  return getAsync(`${TEXT_API}/${textId}/terms/${termId}/count`);\n}\n\nexport async function getTermCountAsync(textId: number) {\n  return getAsync(`${TEXT_API}/${textId}/term-count`);\n}\n\nexport async function getProcessedTermCountAsync(textId: number) {\n  return getAsync(`${TEXT_API}/${textId}/processed-term-count`);\n}\n\nexport async function getTextCountByLanguages(): Promise<{[key: string]: number}> {\n  return getAsync(`${TEXT_API}/count`);\n}\n\nexport function getLastReadTextAsync(): Promise<TextItem | null> {\n  return getAsync(`${TEXT_API}/last-read`)\n}\n","import { createAction } from \"redux-actions\";\nimport { toast } from \"react-toastify\";\nimport {\n  createTermAsync,\n  editTermAsync,\n  getTermAsync,\n  getTermMeaningAsync,\n  getTextMeaningAsync,\n} from \"../Apis/TermApi\";\nimport {Term} from \"../Reducers/TextReducer\";\n\nexport const TERM_GET = \"TERM_GET\";\nexport const TERM_SET = \"TERM_SET\";\nexport const TERM_CREATED = \"TERM_CREATED\";\nexport const TERM_EDITED = \"TERM_EDITED\";\nexport const TERM_EDITING_GET_MEANING = \"TERM_EDITING_GET_MEANING\";\nexport const TERM_EDITING_MEANING_RESET = \"TERM_EDITING_MEANING_RESET\";\nexport const TERM_GET_MEANING = \"TERM_GET_MEANING\";\nexport const TERM_DICTIONARY = \"TERM_DICTIONARY\";\n\nexport const getTermAction = createAction(TERM_GET, async (id: number, index: number) => {\n  try {\n    return { term: await getTermAsync(id), index };\n  } catch (e: any) {\n    toast.error(`Can't get term, ${e.message}`, {\n      position: \"top-right\",\n      autoClose: 5000,\n      hideProgressBar: false,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined,\n    });\n    return null;\n  }\n});\n\nexport const setEditingTermAction = createAction(TERM_SET, (term: Term) => term);\nexport const getEditingTermMeaningAction = createAction(\n  TERM_EDITING_GET_MEANING,\n  async (content: string, from: string, to: string) => {\n    const rs = await getTextMeaningAsync(content.toLowerCase(), from, to);\n    if (!rs) {\n      return \"\";\n    }\n    return rs.meaning;\n  }\n);\n\nexport const dictionaryTermMeaningAction = createAction(\n  TERM_DICTIONARY,\n  async (content: string, from: string, to: string, index: number) => {\n    const rs = await getTextMeaningAsync(content.toLowerCase(), from, to);\n    if (!rs) {\n      return { meaning: \"\", index };\n    }\n    return { meaning: rs.meaning, index };\n  }\n);\n\nexport const resetEditingTermMeaningAction = createAction(\n  TERM_EDITING_MEANING_RESET\n);\n\nexport const createTermAction = createAction(TERM_CREATED, async (term: Term) => {\n  try {\n    const newTerm = { ...term };\n    newTerm.id = await createTermAsync(term);\n    toast.success(\"Term is saved\")\n    return newTerm;\n  } catch (e: any) {\n    toast.error(`Can't create term ${e.message}`)\n    return null;\n  }\n});\nexport const editTermAction = createAction(TERM_EDITED, async (term: Term) => {\n  try {\n    await editTermAsync(term);\n    toast.success(\"Term is saved\", {autoClose: 1000});\n    return term;\n  } catch (e: any) {\n    toast.error(\n      `Can't edit term ${e.message}`\n    );\n    return null;\n  }\n});\nexport const getTermMeaningAction = createAction(\n  TERM_GET_MEANING,\n  async (term: Term, index: number) => {\n    try {\n      const termMeaning = await getTermMeaningAsync(term.id);\n      return { termMeaning, index };\n    } catch (e: any) {\n      toast.error(\n        `Can't get term mearning ${e.message}`\n      );\n      return null;\n    }\n  }\n);\n","import { createAction } from \"redux-actions\";\nimport {\n  loginAsync,\n  logout,\n  registerAsync,\n  getSettingAsync,\n  updateSettingAsync, Credentials, Setting\n} from \"../Apis/UserApi\";\n\nexport const USER_LOGGED_IN = \"USER_LOGGED_IN\";\nexport const USER_REGISTERED = \"USER_REGISTERED\";\nexport const USER_LOGGED_OUT = \"USER_LOGGED_OUT\";\nexport const USER_SETTING_GET = \"USER_SETTING_GET\";\nexport const USER_SETTING_UPDATE = \"USER_SETTING_UPDATE\";\n\n/**\n * user login action.\n */\nexport const loginAction = createAction(USER_LOGGED_IN, async (credentials: Credentials) => {\n  const user = await loginAsync(credentials);\n  if (user !== undefined) {\n    return {\n      isLoggedIn: true,\n      ...user\n    };\n  }\n  return {};\n});\n\nexport const logoutAction = createAction(USER_LOGGED_OUT, () => {\n  logout();\n});\n\nexport const getSettingAction = createAction(USER_SETTING_GET, async () => {\n  try {\n    const setting = await getSettingAsync();\n    if (setting) {\n      return setting;\n    }\n    return { languageSettings: [] };\n  } catch (e) {\n    // ignore\n    return null;\n  }\n});\n\nexport const updateSettingAction = createAction(\n  USER_SETTING_UPDATE,\n  async (value : Setting)=> {\n    try {\n      await updateSettingAsync(value);\n    } catch (e) {\n      // ignore\n    }\n  }\n);\nexport const registerAction = createAction(USER_REGISTERED, async (data: Credentials) => {\n  await registerAsync(data);\n});\n","import decode from \"jwt-decode\";\nimport { API_ROOT, TOKEN_LOCAL_STORAGE_KEY } from \"../Constants\";\nimport { getAsync, postAsync, putAsync } from \"../Utilities/HttpRequest\";\nimport {UserData} from \"../Utilities/JwtTokenHelper\";\n\nexport function getSettingAsync() {\n  return getAsync(`${API_ROOT}/user/setting`);\n}\n\nexport interface Setting {\n\n}\n\nexport function updateSettingAsync(settings: Setting) {\n  return putAsync(`${API_ROOT}/user`, \"setting\", settings);\n}\n\nexport interface Credentials {\n\n}\n\n/**\n * login a user async\n * @param data login data\n */\nexport async function loginAsync(data: Credentials): Promise<UserData| undefined> {\n  try {\n    const result = await postAsync(`${API_ROOT}/user/login`, data);\n    const { token } = result;\n    localStorage.setItem(TOKEN_LOCAL_STORAGE_KEY, token);\n\n    return decode(token);\n  } catch (e) {\n    return undefined;\n  }\n}\n\nexport function logout() {\n  localStorage.removeItem(TOKEN_LOCAL_STORAGE_KEY);\n}\n\nexport interface RegisterData {\n\n}\n\nexport async function registerAsync(data: RegisterData) {\n  await postAsync(`${API_ROOT}/user`, data);\n}\n","import { toast } from \"react-toastify\";\nimport { getAsync, postAsync, putAsync } from \"../Utilities/HttpRequest\";\nimport {API_ROOT, DICTIONARY_API_ROOT, TERM_API} from \"../Constants\";\nimport {Term} from \"../Reducers/TextReducer\";\n\nexport async function getTermAsync(id: number) {\n  return getAsync(`${API_ROOT}/term/${id}`);\n}\n\nexport async function getTextMeaningAsync(text: string, from: string, to: string) {\n  return getAsync(\n    `${DICTIONARY_API_ROOT}/dictionary/${text}`,\n    {\n      fromLang: from,\n      toLang: to\n    },\n    (res: Response) => {\n      if (res.ok) {\n        return res.json();\n      }\n      if (res.status === 404) {\n        toast.info(\"Meaning not found in dictionary\", {autoClose: 1000});\n        return Promise.resolve(null);\n      }\n      throw res;\n    }\n  );\n}\n\nexport async function createTermAsync(term: Term) {\n  return postAsync(`${API_ROOT}/term`, term);\n}\n\nexport async function editTermAsync(term: Term) {\n  return putAsync(`${API_ROOT}/term`, term.id, term);\n}\n\nexport async function getTermMeaningAsync(id: number) {\n  return getAsync(`${API_ROOT}/term/${id}/meaning`);\n}\n\nexport async function getTermCountByLanguages(): Promise<{[key: string]: number}> {\n  return getAsync(`${TERM_API}/count`);\n}\n","/**\n * language actions\n */\nimport {createAction} from \"redux-actions\";\nimport * as languageApi from \"../Apis/LanguageApi\";\n\nexport const LANGUAGE_GET = \"LANGUAGE_GET\";\nexport const LANGUAGE_SELECT = \"LANGUAGE_SELECT\";\n\nexport const getLanguageAction = createAction(LANGUAGE_GET, async () =>\n  languageApi.getUserLanguageAsync()\n);\n\nexport const selectLanguageAction = createAction<string, string>(\n  LANGUAGE_SELECT,\n  language => language\n);\n"],"sourceRoot":""}